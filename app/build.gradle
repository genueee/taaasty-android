apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'testfairy'

ext.private = new Properties()
if (rootProject.file('private.properties').exists()) {
    ext.private.load(new FileInputStream(rootProject.file('private.properties')));
}

def getRevision = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe'
        standardOutput = stdout
    }
    return stdout.toString().trim().replace('-', '–');
}

repositories {
    maven { url "http://clojars.org/repo" }
    maven { url 'https://dl.bintray.com/intercom/intercom-maven' }
    flatDir {
        dirs 'libs'
    }
    maven { url "${project.rootDir}/vendor/creativesdk" }
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "ru.taaasty"
        minSdkVersion 15
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 15
        versionName "1.3.0"

        buildConfigField "String", "API_SERVER_ADDRESS",
                project.ext.private.getProperty("default.ApiServerAddress",
                        "\"http://api.taaasty.com\"")
        buildConfigField "String", "API_SERVER_LOGIN",
                project.ext.private.getProperty("default.ApiServerLogin",
                        "\"\"")
        buildConfigField "String", "API_SERVER_PASSWORD",
                project.ext.private.getProperty("default.ApiServePassword",
                        "\"\"")
        buildConfigField "String", "VKONTAKTE_APP_ID",
                project.ext.private.getProperty("default.VkontakteAppId", "\"4553661\"")
        buildConfigField "String", "YOUTUBE_APP_ID",
                project.ext.private.getProperty("default.YoutubeAppId", "\"AIzaSyBP-gucjXR3BVlVCKQtNzFAdBPy3Tw3_E4\"")
        buildConfigField "String", "THUMBOR_SERVER",
                project.ext.private.getProperty("default.ThumborServer", "\"http://thumbor0.tasty0.ru\"")
        buildConfigField "String", "THUMBOR_KEY",
                project.ext.private.getProperty("default.ThumborKey", "\"golobog\"")
        buildConfigField "String", "PUSHER_KEY",
                project.ext.private.getProperty("default.PusherKey", "\"40dbf1d864d4b366b5e6\"")
        buildConfigField "String", "INTERCOM_API_KEY",
                project.ext.private.getProperty("default.IntercomApiKey", "\"android_sdk-fdc4087976c13ad0c63f2aa12c850b81a43f5184\"")
        buildConfigField "String", "INTERCOM_APP_ID",
                project.ext.private.getProperty("default.IntercomAppId", "\"ef4ce706c805fcdd3cb11255f0c3d8b41f46ba15\"")
        buildConfigField "String", "GOOGLE_APP_ID",
                project.ext.private.getProperty("default.GoogleAppId", "\"73588603634\"")
        buildConfigField "String", "ADOBE_CLIENT_ID",
                project.ext.private.getProperty("default.AdobeClientId", "\"a28b7e7fa93c49c98c0caf1438ec3d53\"")
        buildConfigField "String", "ADOBE_CLIENT_SECRET",
                project.ext.private.getProperty("default.AdobeClientSecret", "\"6102b00a-823c-4ab9-8af8-8e5799961774\"")

        resValue "string", "facebook_app_id", "\"731919696901929\""

        resConfigs "en", "ru" // Выносим неиспользуемые языки

        ndk {
            abiFilters "armeabi-v7a", "armeabi", "x86"
        }

        manifestPlaceholders = [ facebook_app_id_forprovider:"731919696901929"]

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_7
            targetCompatibility JavaVersion.VERSION_1_7
        }
        multiDexEnabled true
    }

    signingConfigs {
        debug {
            storeFile file('../taaasty.debug.keystore')
            storePassword 'android'
            keyAlias 'debug'
            keyPassword 'android'
        }
        release
        beta
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "dbg-" + getRevision()
            resValue "string", "app_name", "Тейсти dbg" + getRevision()
            manifestPlaceholders = [ facebook_app_id_forprovider:"debug7319196969019291"] // Левый id в провайдере, чтобы не задалбывал ошибками
            multiDexEnabled true
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', 'proguard-aviary.pro'
            signingConfig signingConfigs.release
        }
        beta {
            applicationIdSuffix ".beta";
            versionNameSuffix "b-" + getRevision()
            resValue "string", "app_name", "Тейсти beta"
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', 'proguard-aviary.pro'
            signingConfig signingConfigs.beta
            manifestPlaceholders = [ facebook_app_id_forprovider:"beta7319196969019291"] // Левый id в провайдере, чтобы не задалбывал ошибками
        }
    }

    lintOptions {
        warning 'InvalidPackage'
        disable 'RtlHardcoded'
        disable 'AppCompatResource'
        disable 'WrongConstant' // Не работает нихера, много ложных срабатываний. Мож в новых версиях лучше будет
    }

    testfairyConfig {
        apiKey "d4c4e1c7be190a08909ce36747839e2ca45e74a2"
        autoUpdate true
        notify true
        iconWatermark true
        video "off";
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/leiningen/org.java-websocket/java-websocket/LICENSE'
        exclude 'META-INF/leiningen/org.java-websocket/java-websocket/README.markdown'
        exclude 'META-INF/leiningen/org.java-websocket/java-websocket/project.clj'
        exclude 'project.clj'
    }

    dexOptions {
        jumboMode true
        incremental true
        preDexLibraries false
        javaMaxHeapSize "4g"
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile project(':ndkstackblur')
    compile project(':ViewPagerIndicator')

    // You must install or update the Support Repository through the SDK manager to use this dependency.
    compile 'com.android.support:appcompat-v7:23.0.0'
    compile 'com.android.support:design:23.0.0'
    compile 'com.android.support:support-annotations:23.0.0'
    compile 'com.android.support:support-v4:23.0.0'
    compile 'com.android.support:recyclerview-v7:23.0.0'
    compile 'com.facebook.android:facebook-android-sdk:4.4.0'
    compile 'com.github.chrisbanes.photoview:library:1.2.3'
    compile 'io.reactivex:rxjava:1.0.14'
    compile 'io.reactivex:rxandroid:0.25.0'
    compile 'com.google.android.gms:play-services-analytics:7.8.0'
    compile 'com.google.android.gms:play-services-gcm:7.8.0'
    compile 'com.pusher:pusher-java-client:0.3.3'
    compile 'com.squareup.okhttp:okhttp:2.5.0'
    compile 'com.squareup.okhttp:okhttp-ws:2.5.0'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.5.0' // aviary
    compile 'com.squareup:pollexor:2.0.2'
    // Picasso из jecenter не используем, пока не починят https://github.com/square/picasso/issues/364,
    // пока своя сборка.
    // compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.squareup.retrofit:retrofit:1.8.0'
    compile 'com.vk:androidsdk:1.3.6'
    compile 'de.greenrobot:eventbus:2.4.0'
    compile 'javax.annotation:jsr250-api:1.0'
    compile 'pl.droidsonroids.gif:android-gif-drawable:1.1.8'
    compile 'uk.co.chrisjenx:calligraphy:2.1.0'

    // intercom
    compile ('io.intercom.android:intercom-sdk:1.1.3@aar') { transitive = true }

    // aviary
    compile 'com.android.support:multidex:1.0.1'
    //compile 'com.adobe.creativesdk.foundation:auth:0.3.94'
    compile 'com.adobe.creativesdk:image:4.0.0'

    testCompile 'junit:junit:4.12'
    testCompile "org.robolectric:robolectric:3.0"
}

['beta', 'release'].each { typeName ->
    def bt = android.buildTypes[typeName]
    bt.buildConfigField "String", "API_SERVER_ADDRESS",
            project.ext.private.getProperty("${typeName}.ApiServerAddress", "\"http://api.taaasty.com\"")
    bt.buildConfigField "String", "API_SERVER_LOGIN",
            project.ext.private.getProperty("${typeName}.ApiServerLogin", "\"\"")
    bt.buildConfigField "String", "API_SERVER_PASSWORD",
            project.ext.private.getProperty("${typeName}.ApiServerPassword", "\"\"")
    bt.buildConfigField "String", "VKONTAKTE_APP_ID",
            project.ext.private.getProperty("${typeName}.VkontakteAppId", "\"4553661\"")
    bt.buildConfigField "String", "THUMBOR_KEY",
            project.ext.private.getProperty("${typeName}.ThumborKey", "\"golobog\"")
    bt.buildConfigField "String", "THUMBOR_SERVER",
            project.ext.private.getProperty("${typeName}.ThumborServer", "\"http://thumbor0.tasty0.ru\"")
    bt.buildConfigField "String", "YOUTUBE_APP_ID",
            project.ext.private.getProperty("${typeName}.YoutubeAppId", "\"AIzaSyBP-gucjXR3BVlVCKQtNzFAdBPy3Tw3_E4\"")
    bt.buildConfigField "String", "PUSHER_KEY",
            project.ext.private.getProperty("${typeName}.PusherKey", "\"40dbf1d864d4b366b5e6\"")
    bt.buildConfigField "String", "INTERCOM_API_KEY",
            project.ext.private.getProperty("${typeName}.IntercomApiKey", "\"android_sdk-fdc4087976c13ad0c63f2aa12c850b81a43f5184\"")
    bt.buildConfigField "String", "INTERCOM_APP_ID",
            project.ext.private.getProperty("${typeName}.IntercomAppId", "\"ef4ce706c805fcdd3cb11255f0c3d8b41f46ba15\"")
    bt.buildConfigField "String", "GOOGLE_APP_ID",
            project.ext.private.getProperty("${typeName}.GoogleAppId", "\"73588603634\"")
    bt.buildConfigField "String", "ADOBE_CLIENT_ID",
            project.ext.private.getProperty("${typeName}.AdobeClientId", "\"a28b7e7fa93c49c98c0caf1438ec3d53\"")
    bt.buildConfigField "String", "ADOBE_CLIENT_SECRET",
            project.ext.private.getProperty("${typeName}.AdobeClientSecret", "\"6102b00a-823c-4ab9-8af8-8e5799961774\"")
}

if (ext.private.getProperty('release.StoreFile') != null) {
    android.signingConfigs.release.storeFile = file(ext.private['release.StoreFile'])
    android.signingConfigs.release.storePassword = ext.private['release.StorePassword']
    android.signingConfigs.release.keyAlias = ext.private['release.KeyAlias']
    android.signingConfigs.release.keyPassword = ext.private['release.KeyPassword']
} else {
    android.buildTypes.release.signingConfig = null
}

if (ext.private.getProperty('beta.StoreFile') != null) {
    android.signingConfigs.beta.storeFile = file(ext.private['beta.StoreFile'])
    android.signingConfigs.beta.storePassword = ext.private['beta.StorePassword']
    android.signingConfigs.beta.keyAlias = ext.private['beta.KeyAlias']
    android.signingConfigs.beta.keyPassword = ext.private['beta.KeyPassword']
} else {
    android.buildTypes.beta.signingConfig = null
}
