buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://www.testfairy.com/maven' }
    }

    dependencies {
        classpath 'com.testfairy.plugins.gradle:testfairy:1.+'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'testfairy'

ext.private = new Properties()
if (rootProject.file('private.properties').exists()) {
    ext.private.load(new FileInputStream(rootProject.file('private.properties')));
}

def getRevision = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

repositories {
    maven { url "https://repo.commonsware.com.s3.amazonaws.com" }
    maven { url "http://maven.aviary.com/repo/release" }
}

android {
    compileSdkVersion 21
    buildToolsVersion "21.0.2"

    defaultConfig {
        applicationId "ru.taaasty"
        minSdkVersion 15
        targetSdkVersion 21
        versionCode 3
        versionName "1.0b3"

        buildConfigField "String", "API_SERVER_ADDRESS",
                project.ext.private.getProperty("default.ApiServerAddress",
                        "\"http://api.taaasty.ru\"")
        buildConfigField "String", "VKONTAKTE_APP_ID",
                project.ext.private.getProperty("default.VkontakteAppId", "\"4553661\"")
        buildConfigField "String", "YOUTUBE_APP_ID",
                project.ext.private.getProperty("default.YoutubeAppId", "\"AIzaSyBP-gucjXR3BVlVCKQtNzFAdBPy3Tw3_E4\"")
        buildConfigField "String", "THUMBOR_SERVER",
                project.ext.private.getProperty("default.ThumborServer", "\"http://thumbor0.tcdn.ru\"")
        buildConfigField "String", "THUMBOR_KEY",
                project.ext.private.getProperty("default.ThumborKey", "\"golobog\"")
        buildConfigField "String", "PUSHER_KEY",
                project.ext.private.getProperty("default.PusherKey", "\"40dbf1d864d4b366b5e6\"")

        resValue "string", "aviary_key", "fe37f3b5e87c67a2"
        resValue "string", "aviary_secret", "3ef989608e94cdc5"

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_7
            targetCompatibility JavaVersion.VERSION_1_7
        }
    }

    signingConfigs {
        debug {
            storeFile file('../taaasty.debug.keystore')
            storePassword 'android'
            keyAlias 'debug'
            keyPassword 'android'
        }
        release
        beta
    }

    buildTypes {
        debug {
            // applicationIdSuffix ".debug"
            versionNameSuffix "dbg-" + getRevision()
            resValue "string", "app_name", "Тейсти dbg" + getRevision()
        }
        release {
            runProguard true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', 'proguard-aviary.pro'
            signingConfig signingConfigs.release
        }
        beta {
            versionNameSuffix "b-" + getRevision()
            resValue "string", "app_name", "Тейсти beta"
            runProguard true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro', 'proguard-aviary.pro'
            signingConfig signingConfigs.beta
        }
    }

    lintOptions {
        warning 'InvalidPackage'
    }

    testfairyConfig {
        apiKey "d4c4e1c7be190a08909ce36747839e2ca45e74a2"
        autoUpdate true
        notify true
        iconWatermark true
        video "off";
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile project(':ndkstackblur')
    compile project(':ViewPagerIndicator')

    // You must install or update the Support Repository through the SDK manager to use this dependency.
    compile 'com.android.support:support-annotations:21.0.0'
    compile 'com.android.support:support-v13:21.0.0'
    compile 'com.android.support:support-v4:21.0.0'
    compile 'com.android.support:recyclerview-v7:21.0.0'
    compile 'com.commonsware.cwac:adapter:1.0.+'
    compile 'com.etsy.android.grid:library:1.0.5'
    compile 'com.github.chrisbanes.photoview:library:1.2.3'
    compile 'com.google.android.gms:play-services:5.0.89'
    compile 'com.netflix.rxjava:rxjava-android:0.19.6'
    compile 'com.pusher:pusher-java-client:0.3.1'
    compile 'com.squareup.okhttp:okhttp:2.0.0'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.0.0'
    compile 'com.squareup:pollexor:2.0.2'
    compile 'com.squareup.retrofit:retrofit:1.6.1'
    compile 'com.vk:androidsdk:1.3.2'
    compile 'de.greenrobot:eventbus:2.2.1'
    compile 'javax.annotation:jsr250-api:1.0'
    compile 'pl.droidsonroids.gif:android-gif-drawable:1.0.10+'
    compile 'uk.co.chrisjenx:calligraphy:1.1.+'
    compile(group: 'com.aviary.android.feather.sdk', name: 'aviary-sdk', version: '3.4.3.+') {
        exclude(group: 'com.squareup.okhttp', module: 'okhttp')
        exclude(group: 'com.squareup.okhttp', module: 'okhttp-urlconnection')
        exclude(group: 'com.intellij', module: 'annotations')
        exclude(group: 'org.apache.commons', module: 'commons-lang3')
        exclude(group: 'commons-io', module: 'commons-io')
    }
    compile(group: 'it.sephiroth.android.library.picasso', name: 'picasso', version: '2.3.4.3') {
        exclude(group: 'com.squareup.okhttp', module: 'okhttp')
        exclude(group: 'com.squareup.okhttp', module: 'okhttp-urlconnection')
        exclude(group: 'com.intellij', module: 'annotations')
        exclude(group: 'commons-io', module: 'commons-io')
    }
}

['beta', 'release'].each { typeName ->
    def bt = android.buildTypes[typeName]
    bt.buildConfigField "String", "API_SERVER_ADDRESS",
            project.ext.private.getProperty("${typeName}.ApiServerAddress", "\"http://api.taaasty.ru\"")
    bt.buildConfigField "String", "VKONTAKTE_APP_ID",
            project.ext.private.getProperty("${typeName}.VkontakteAppId", "\"4553661\"")
    bt.buildConfigField "String", "THUMBOR_KEY",
            project.ext.private.getProperty("${typeName}.ThumborKey", "\"golobog\"")
    bt.buildConfigField "String", "THUMBOR_SERVER",
            project.ext.private.getProperty("${typeName}.ThumborServer", "\"http://thumbor0.tcdn.ru\"")
    bt.buildConfigField "String", "YOUTUBE_APP_ID",
            project.ext.private.getProperty("${typeName}.YoutubeAppId", "\"AIzaSyBP-gucjXR3BVlVCKQtNzFAdBPy3Tw3_E4\"")
    bt.buildConfigField "String", "PUSHER_KEY",
            project.ext.private.getProperty("${typeName}.PusherKey", "\"40dbf1d864d4b366b5e6\"")
}

if (ext.private.getProperty('release.StoreFile') != null) {
    android.signingConfigs.release.storeFile = file(ext.private['release.StoreFile'])
    android.signingConfigs.release.storePassword = ext.private['release.StorePassword']
    android.signingConfigs.release.keyAlias = ext.private['release.KeyAlias']
    android.signingConfigs.release.keyPassword = ext.private['release.KeyPassword']
} else {
    android.buildTypes.release.signingConfig = null
}

if (ext.private.getProperty('beta.StoreFile') != null) {
    android.signingConfigs.beta.storeFile = file(ext.private['beta.StoreFile'])
    android.signingConfigs.beta.storePassword = ext.private['beta.StorePassword']
    android.signingConfigs.beta.keyAlias = ext.private['beta.KeyAlias']
    android.signingConfigs.beta.keyPassword = ext.private['beta.KeyPassword']
} else {
    android.buildTypes.beta.signingConfig = null
}
