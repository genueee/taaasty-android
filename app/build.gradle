buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.21.5'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'io.fabric'
apply plugin: 'com.fernandocejas.frodo'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'testfairy'


ext.private = new Properties()
if (rootProject.file('private.properties').exists()) {
    ext.private.load(new FileInputStream(rootProject.file('private.properties')));
}

def gitSha = 'git rev-parse --short HEAD'.execute([], project.rootDir).text.trim().replace('-', '–')

repositories {
    maven { url "http://clojars.org/repo" }

    flatDir {
        dirs 'libs'
    }
    maven { url 'https://maven.fabric.io/public' }
    maven { url 'https://repo.adobe.com/nexus/content/repositories/releases/' }
}

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "ru.taaasty"
        minSdkVersion 16
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 23
        versionName "1.6.1" // Используем semver. Требуется для проверки версии. Hint: 1.6 - неверно, 1.6.0 - верно

        buildConfigField "String", "API_SERVER_ADDRESS",
                project.ext.private.getProperty("default.ApiServerAddress",
                        "\"http://api.taaasty.com\"")
        buildConfigField "String", "API_SERVER_LOGIN",
                project.ext.private.getProperty("default.ApiServerLogin",
                        "\"\"")
        buildConfigField "String", "API_SERVER_PASSWORD",
                project.ext.private.getProperty("default.ApiServePassword",
                        "\"\"")
        buildConfigField "String", "YOUTUBE_APP_ID",
                project.ext.private.getProperty("default.YoutubeAppId", "\"AIzaSyBP-gucjXR3BVlVCKQtNzFAdBPy3Tw3_E4\"")
        buildConfigField "String", "THUMBOR_SERVER",
                project.ext.private.getProperty("default.ThumborServer", "\"http://thumbor4.tasty0.ru\"")
        buildConfigField "String", "THUMBOR_KEY",
                project.ext.private.getProperty("default.ThumborKey", "\"f35lN0D83uMByZu9\"")
        buildConfigField "String", "PUSHER_KEY",
                project.ext.private.getProperty("default.PusherKey", "\"40dbf1d864d4b366b5e6\"")
        buildConfigField "String", "GOOGLE_APP_ID",
                project.ext.private.getProperty("default.GoogleAppId", "\"73588603634\"")
        buildConfigField "String", "ADOBE_CLIENT_ID",
                project.ext.private.getProperty("default.AdobeClientId", "\"a28b7e7fa93c49c98c0caf1438ec3d53\"")
        buildConfigField "String", "ADOBE_CLIENT_SECRET",
                project.ext.private.getProperty("default.AdobeClientSecret", "\"6102b00a-823c-4ab9-8af8-8e5799961774\"")
        buildConfigField "retrofit.RestAdapter.LogLevel", "RETROFIT_LOG_LEVEL",
                project.ext.private.getProperty("default.RetrofitLogLevel", "retrofit.RestAdapter.LogLevel.BASIC")

        buildConfigField 'ru.taaasty.stetho.StethoHelper', 'STETHO', 'new ru.taaasty.stetho.DummyStethoHelper()'

        resValue "string", "facebook_app_id", "\"731919696901929\""
        resValue "integer", "com_vk_sdk_AppId", project.ext.private.getProperty("default.VkontakteAppId", "4553661")


        resConfigs "en", "ru" // Выносим неиспользуемые языки

        ndk {
            abiFilters "armeabi-v7a", "x86"
        }

        manifestPlaceholders = [ facebook_app_id_forprovider:"731919696901929"]

        multiDexEnabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    signingConfigs {
        debug {
            storeFile file('../taaasty.debug.keystore')
            storePassword 'android'
            keyAlias 'debug'
            keyPassword 'android'
        }
        release
        beta
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "+d" + gitSha
            resValue "string", "app_name", "Тейсти dbg" + gitSha
            manifestPlaceholders = [ facebook_app_id_forprovider:"debug7319196969019291"] // Левый id в провайдере, чтобы не задалбывал ошибками
            multiDexEnabled true
            buildConfigField 'ru.taaasty.stetho.StethoHelper', 'STETHO', 'new ru.taaasty.stetho.DebugStethoHelper()'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            buildConfigField 'retrofit.RestAdapter.LogLevel', 'RETROFIT_LOG_LEVEL', 'retrofit.RestAdapter.LogLevel.NONE'
        }
        beta {
            applicationIdSuffix ".beta";
            versionNameSuffix "+b" + gitSha
            resValue "string", "app_name", "Тейсти beta"
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.beta
            manifestPlaceholders = [ facebook_app_id_forprovider:"beta7319196969019291"] // Левый id в провайдере, чтобы не задалбывал ошибками
        }
    }

    lintOptions {
        warning 'RtlHardcoded'
        warning 'AppCompatResource'
        warning 'WrongConstant' // Не работает нихера, много ложных срабатываний. Мож в новых версиях лучше будет
    }

    testfairyConfig {
        apiKey "d4c4e1c7be190a08909ce36747839e2ca45e74a2"
        autoUpdate true
        notify true
        iconWatermark true
        video "off";
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/leiningen/org.java-websocket/java-websocket/LICENSE'
        exclude 'META-INF/leiningen/org.java-websocket/java-websocket/README.markdown'
        exclude 'META-INF/leiningen/org.java-websocket/java-websocket/project.clj'
        exclude 'project.clj'
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile project(':ndkstackblur')
    compile project(':ViewPagerIndicator')

    compile 'com.android.support:appcompat-v7:23.3.0'
    compile 'com.android.support:cardview-v7:23.3.0'
    compile 'com.android.support:design:23.3.0'
    compile 'com.android.support:gridlayout-v7:23.3.0'
    compile 'com.android.support:preference-v7:23.3.0'
    compile 'com.android.support:recyclerview-v7:23.3.0'
    compile 'com.android.support:support-annotations:23.3.0'
    compile 'com.android.support:support-v4:23.3.0'
    compile 'com.android.support:multidex:1.0.1'
    compile 'com.facebook.android:facebook-android-sdk:4.10.1'
    compile 'com.commit451:PhotoView:1.2.5'
    compile 'io.reactivex:rxjava:1.1.3'
    compile 'io.reactivex:rxandroid:1.1.0'
    compile 'com.trello:rxlifecycle:0.5.0'
    compile 'com.trello:rxlifecycle-components:0.5.0'
    compile 'com.google.android.gms:play-services-analytics:8.4.0'
    compile 'com.google.android.gms:play-services-gcm:8.4.0'
    compile('com.pusher:pusher-java-client:1.1.2')
    compile 'org.slf4j:slf4j-nop:1.7.21'
    compile 'com.squareup.okhttp:okhttp:2.7.5'
    compile 'com.squareup.okhttp:okhttp-ws:2.7.5'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.7.5' // aviary
    compile 'com.squareup:pollexor:2.0.4'
    // Picasso из jecenter не используем, пока не починят https://github.com/square/picasso/issues/364,
    // пока своя сборка.
    // compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.squareup.retrofit:retrofit:1.8.0'
    compile 'com.vk:androidsdk:1.6.6'
    compile 'de.greenrobot:eventbus:2.4.0'
    compile 'javax.annotation:jsr250-api:1.0'
    compile 'info.piwai.frenchtoast:frenchtoast:1.0'
    compile 'nl.littlerobots.rxlint:rxlint:1.0'
    compile 'pl.droidsonroids.gif:android-gif-drawable:1.1.15'
    compile 'uk.co.chrisjenx:calligraphy:2.2.0'

    // aviary
    compile 'com.adobe.creativesdk.foundation:auth:0.9.7'
    compile 'com.adobe.creativesdk:image:4.4.8'

    debugCompile 'com.facebook.stetho:stetho:1.3.1'
    debugCompile 'com.facebook.stetho:stetho-okhttp:1.3.1'

    testCompile 'junit:junit:4.12'
    testCompile "org.robolectric:robolectric:3.0"

    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') { transitive = true; }
}

['beta', 'release'].each { typeName ->
    def bt = android.buildTypes[typeName]
    bt.buildConfigField "String", "API_SERVER_ADDRESS",
            project.ext.private.getProperty("${typeName}.ApiServerAddress", "\"http://api.taaasty.com\"")
    bt.buildConfigField "String", "API_SERVER_LOGIN",
            project.ext.private.getProperty("${typeName}.ApiServerLogin", "\"\"")
    bt.buildConfigField "String", "API_SERVER_PASSWORD",
            project.ext.private.getProperty("${typeName}.ApiServerPassword", "\"\"")
    bt.buildConfigField "String", "THUMBOR_KEY",
            project.ext.private.getProperty("${typeName}.ThumborKey", "\"f35lN0D83uMByZu9\"")
    bt.buildConfigField "String", "THUMBOR_SERVER",
            project.ext.private.getProperty("${typeName}.ThumborServer", "\"http://thumbor4.tasty0.ru\"")
    bt.buildConfigField "String", "YOUTUBE_APP_ID",
            project.ext.private.getProperty("${typeName}.YoutubeAppId", "\"AIzaSyBP-gucjXR3BVlVCKQtNzFAdBPy3Tw3_E4\"")
    bt.buildConfigField "String", "PUSHER_KEY",
            project.ext.private.getProperty("${typeName}.PusherKey", "\"40dbf1d864d4b366b5e6\"")

    bt.buildConfigField "String", "GOOGLE_APP_ID",
            project.ext.private.getProperty("${typeName}.GoogleAppId", "\"73588603634\"")
    bt.buildConfigField "String", "ADOBE_CLIENT_ID",
            project.ext.private.getProperty("${typeName}.AdobeClientId", "\"a28b7e7fa93c49c98c0caf1438ec3d53\"")
    bt.buildConfigField "String", "ADOBE_CLIENT_SECRET",
            project.ext.private.getProperty("${typeName}.AdobeClientSecret", "\"6102b00a-823c-4ab9-8af8-8e5799961774\"")
}

if (ext.private.getProperty('release.StoreFile') != null) {
    android.signingConfigs.release.storeFile = file(ext.private['release.StoreFile'])
    android.signingConfigs.release.storePassword = ext.private['release.StorePassword']
    android.signingConfigs.release.keyAlias = ext.private['release.KeyAlias']
    android.signingConfigs.release.keyPassword = ext.private['release.KeyPassword']
} else {
    android.buildTypes.release.signingConfig = null
}

if (ext.private.getProperty('beta.StoreFile') != null) {
    android.signingConfigs.beta.storeFile = file(ext.private['beta.StoreFile'])
    android.signingConfigs.beta.storePassword = ext.private['beta.StorePassword']
    android.signingConfigs.beta.keyAlias = ext.private['beta.KeyAlias']
    android.signingConfigs.beta.keyPassword = ext.private['beta.KeyPassword']
} else {
    android.buildTypes.beta.signingConfig = null
}
